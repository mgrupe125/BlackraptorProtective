//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportViewerControlApplication {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.847.0")]
    [Serializable()]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : Devart.Data.MySql.MySqlDataSet {
        
        private IncidentDataTable tableIncident;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        private bool _shouldSerializeConnection = false;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                Devart.Data.MySql.MySqlDataSet ds = new Devart.Data.MySql.MySqlDataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Incident"] != null)) {
                    base.Tables.Add(new IncidentDataTable(((Devart.Data.MySql.MySqlDataTable)(ds.Tables["Incident"]))));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(System.Data.SchemaSerializationMode.IncludeSchema)]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IncidentDataTable Incident {
            get {
                return this.tableIncident;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public new Devart.Data.MySql.MySqlConnection Connection {
            get {
                return base.Connection;
            }
            set {
                base.Connection = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public new string Prefix {
            get {
                return base.Prefix;
            }
            set {
                base.Prefix = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                Devart.Data.MySql.MySqlDataSet ds = new Devart.Data.MySql.MySqlDataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Incident"] != null)) {
                    base.Tables.Add(new IncidentDataTable(((Devart.Data.MySql.MySqlDataTable)(ds.Tables["Incident"]))));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableIncident = ((IncidentDataTable)(base.Tables["Incident"]));
            if ((initTable == true)) {
                if ((this.tableIncident != null)) {
                    this.tableIncident.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableIncident = new IncidentDataTable(this.Connection);
            base.Tables.Add(this.tableIncident);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeConnection() {
            return (this._shouldSerializeConnection 
                        || (this.Connection != null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePrefix() {
            return false;
        }
        
        public delegate void IncidentRowChangeEventHandler(object sender, IncidentRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.847.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IncidentDataTable : Devart.Data.MySql.MySqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columnAgency;
            
            private System.Data.DataColumn columnReportNumber;
            
            private System.Data.DataColumn columnSupplementNumber;
            
            private System.Data.DataColumn columnReportedDate;
            
            private System.Data.DataColumn columnReportedTime;
            
            private System.Data.DataColumn columnCADCallNumber;
            
            private System.Data.DataColumn columnStatus;
            
            private System.Data.DataColumn columnNatureOfCall;
            
            private System.Data.DataColumn columnPropertyId;
            
            private System.Data.DataColumn columnUnitNumber;
            
            private System.Data.DataColumn columnCity;
            
            private System.Data.DataColumn columnZIPCode;
            
            private System.Data.DataColumn columnRepDist;
            
            private System.Data.DataColumn columnBeat;
            
            private System.Data.DataColumn columnArea;
            
            private System.Data.DataColumn columnFromDate;
            
            private System.Data.DataColumn columnFromTime;
            
            private System.Data.DataColumn columnToDate;
            
            private System.Data.DataColumn columnOfficer;
            
            private System.Data.DataColumn columnAssignment;
            
            private System.Data.DataColumn columnConfidential;
            
            private System.Data.DataColumn columnCmdrRpt;
            
            private System.Data.DataColumn columnEnteredBy;
            
            private System.Data.DataColumn columnEnteredBy2;
            
            private System.Data.DataColumn columnReviewOfficer;
            
            private System.Data.DataColumn columnRCStatus;
            
            private System.Data.DataColumn columnRCStatusDate;
            
            private System.Data.DataColumn columnRCStatusTime;
            
            private System.Data.DataColumn columnExtraToReport;
            
            private System.Data.DataColumn columnPInvolvementNumber;
            
            private System.Data.DataColumn columnNNarative;
            
            private System.Data.DataColumn columnPPlaceOfBirth;
            
            private System.Data.DataColumn columnPRelationToOffender;
            
            private System.Data.DataColumn columnPDomViolence;
            
            private System.Data.DataColumn columnPExtentOfInjury;
            
            private System.Data.DataColumn columnPMeansOfAttack;
            
            private System.Data.DataColumn columnPConfidential;
            
            private System.Data.DataColumn columnPEthnicity;
            
            private System.Data.DataColumn columnPSkin;
            
            private System.Data.DataColumn columnPEyeColor;
            
            private System.Data.DataColumn columnPHairColor;
            
            private System.Data.DataColumn columnPToWeight;
            
            private System.Data.DataColumn columnPWeight;
            
            private System.Data.DataColumn columnPToHeight;
            
            private System.Data.DataColumn columnPHeight;
            
            private System.Data.DataColumn columnPJuvenile;
            
            private System.Data.DataColumn columnPToAge;
            
            private System.Data.DataColumn columnPAge;
            
            private System.Data.DataColumn columnPDOB;
            
            private System.Data.DataColumn columnPSex;
            
            private System.Data.DataColumn columnPRace;
            
            private System.Data.DataColumn columnPMini;
            
            private System.Data.DataColumn columnPName;
            
            private System.Data.DataColumn columnPType;
            
            private System.Data.DataColumn columnPInvolvement;
            
            private System.Data.DataColumn columnClientEID;
            
            private System.Data.DataColumn columnSecondOfficer;
            
            private System.Data.DataColumn columnSecondAssignment;
            
            private System.Data.DataColumn columnFinalReportVersion;
            
            private System.Data.DataColumn columnToTime;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncidentDataTable() : 
                    this(((Devart.Data.MySql.MySqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncidentDataTable(Devart.Data.MySql.MySqlConnection connection) {
                this.TableName = "Incident";
                this.Name = "Incident";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncidentDataTable(Devart.Data.MySql.MySqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IncidentDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn AgencyColumn {
                get {
                    return this.columnAgency;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ReportNumberColumn {
                get {
                    return this.columnReportNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn SupplementNumberColumn {
                get {
                    return this.columnSupplementNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ReportedDateColumn {
                get {
                    return this.columnReportedDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ReportedTimeColumn {
                get {
                    return this.columnReportedTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn CADCallNumberColumn {
                get {
                    return this.columnCADCallNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn NatureOfCallColumn {
                get {
                    return this.columnNatureOfCall;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PropertyIdColumn {
                get {
                    return this.columnPropertyId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn UnitNumberColumn {
                get {
                    return this.columnUnitNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ZIPCodeColumn {
                get {
                    return this.columnZIPCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn RepDistColumn {
                get {
                    return this.columnRepDist;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn BeatColumn {
                get {
                    return this.columnBeat;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn AreaColumn {
                get {
                    return this.columnArea;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn FromTimeColumn {
                get {
                    return this.columnFromTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn OfficerColumn {
                get {
                    return this.columnOfficer;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn AssignmentColumn {
                get {
                    return this.columnAssignment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ConfidentialColumn {
                get {
                    return this.columnConfidential;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn CmdrRptColumn {
                get {
                    return this.columnCmdrRpt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn EnteredByColumn {
                get {
                    return this.columnEnteredBy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn EnteredBy2Column {
                get {
                    return this.columnEnteredBy2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ReviewOfficerColumn {
                get {
                    return this.columnReviewOfficer;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn RCStatusColumn {
                get {
                    return this.columnRCStatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn RCStatusDateColumn {
                get {
                    return this.columnRCStatusDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn RCStatusTimeColumn {
                get {
                    return this.columnRCStatusTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ExtraToReportColumn {
                get {
                    return this.columnExtraToReport;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PInvolvementNumberColumn {
                get {
                    return this.columnPInvolvementNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn NNarativeColumn {
                get {
                    return this.columnNNarative;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PPlaceOfBirthColumn {
                get {
                    return this.columnPPlaceOfBirth;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PRelationToOffenderColumn {
                get {
                    return this.columnPRelationToOffender;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PDomViolenceColumn {
                get {
                    return this.columnPDomViolence;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PExtentOfInjuryColumn {
                get {
                    return this.columnPExtentOfInjury;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PMeansOfAttackColumn {
                get {
                    return this.columnPMeansOfAttack;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PConfidentialColumn {
                get {
                    return this.columnPConfidential;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PEthnicityColumn {
                get {
                    return this.columnPEthnicity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PSkinColumn {
                get {
                    return this.columnPSkin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PEyeColorColumn {
                get {
                    return this.columnPEyeColor;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PHairColorColumn {
                get {
                    return this.columnPHairColor;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PToWeightColumn {
                get {
                    return this.columnPToWeight;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PWeightColumn {
                get {
                    return this.columnPWeight;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PToHeightColumn {
                get {
                    return this.columnPToHeight;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PHeightColumn {
                get {
                    return this.columnPHeight;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PJuvenileColumn {
                get {
                    return this.columnPJuvenile;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PToAgeColumn {
                get {
                    return this.columnPToAge;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PAgeColumn {
                get {
                    return this.columnPAge;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PDOBColumn {
                get {
                    return this.columnPDOB;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PSexColumn {
                get {
                    return this.columnPSex;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PRaceColumn {
                get {
                    return this.columnPRace;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PMiniColumn {
                get {
                    return this.columnPMini;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PNameColumn {
                get {
                    return this.columnPName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PTypeColumn {
                get {
                    return this.columnPType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn PInvolvementColumn {
                get {
                    return this.columnPInvolvement;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ClientEIDColumn {
                get {
                    return this.columnClientEID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn SecondOfficerColumn {
                get {
                    return this.columnSecondOfficer;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn SecondAssignmentColumn {
                get {
                    return this.columnSecondAssignment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn FinalReportVersionColumn {
                get {
                    return this.columnFinalReportVersion;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ToTimeColumn {
                get {
                    return this.columnToTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncidentRow this[int index] {
                get {
                    return ((IncidentRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.MySql.MySqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.MySql.MySqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.MySql.MySqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.MySql.MySqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.MySql.MySqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event IncidentRowChangeEventHandler IncidentRowChanging;
            
            public event IncidentRowChangeEventHandler IncidentRowChanged;
            
            public event IncidentRowChangeEventHandler IncidentRowDeleting;
            
            public event IncidentRowChangeEventHandler IncidentRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIncidentRow(IncidentRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncidentRow AddIncidentRow(
                        int id, 
                        string Agency, 
                        string ReportNumber, 
                        string SupplementNumber, 
                        string ReportedDate, 
                        string ReportedTime, 
                        string CADCallNumber, 
                        string Status, 
                        string NatureOfCall, 
                        string PropertyId, 
                        string UnitNumber, 
                        string City, 
                        string ZIPCode, 
                        string RepDist, 
                        string Beat, 
                        string Area, 
                        string FromDate, 
                        string FromTime, 
                        string ToDate, 
                        string Officer, 
                        string Assignment, 
                        string Confidential, 
                        string CmdrRpt, 
                        string EnteredBy, 
                        string EnteredBy2, 
                        string ReviewOfficer, 
                        string RCStatus, 
                        string RCStatusDate, 
                        string RCStatusTime, 
                        string ExtraToReport, 
                        string PInvolvementNumber, 
                        string NNarative, 
                        string PPlaceOfBirth, 
                        string PRelationToOffender, 
                        string PDomViolence, 
                        string PExtentOfInjury, 
                        string PMeansOfAttack, 
                        string PConfidential, 
                        string PEthnicity, 
                        string PSkin, 
                        string PEyeColor, 
                        string PHairColor, 
                        string PToWeight, 
                        string PWeight, 
                        string PToHeight, 
                        string PHeight, 
                        string PJuvenile, 
                        string PToAge, 
                        string PAge, 
                        string PDOB, 
                        string PSex, 
                        string PRace, 
                        string PMini, 
                        string PName, 
                        string PType, 
                        string PInvolvement, 
                        string ClientEID, 
                        string SecondOfficer, 
                        string SecondAssignment, 
                        string FinalReportVersion, 
                        string ToTime) {
                IncidentRow rowIncidentRow = ((IncidentRow)(this.NewRow()));
                rowIncidentRow.ItemArray = new object[] {
                        id,
                        Agency,
                        ReportNumber,
                        SupplementNumber,
                        ReportedDate,
                        ReportedTime,
                        CADCallNumber,
                        Status,
                        NatureOfCall,
                        PropertyId,
                        UnitNumber,
                        City,
                        ZIPCode,
                        RepDist,
                        Beat,
                        Area,
                        FromDate,
                        FromTime,
                        ToDate,
                        Officer,
                        Assignment,
                        Confidential,
                        CmdrRpt,
                        EnteredBy,
                        EnteredBy2,
                        ReviewOfficer,
                        RCStatus,
                        RCStatusDate,
                        RCStatusTime,
                        ExtraToReport,
                        PInvolvementNumber,
                        NNarative,
                        PPlaceOfBirth,
                        PRelationToOffender,
                        PDomViolence,
                        PExtentOfInjury,
                        PMeansOfAttack,
                        PConfidential,
                        PEthnicity,
                        PSkin,
                        PEyeColor,
                        PHairColor,
                        PToWeight,
                        PWeight,
                        PToHeight,
                        PHeight,
                        PJuvenile,
                        PToAge,
                        PAge,
                        PDOB,
                        PSex,
                        PRace,
                        PMini,
                        PName,
                        PType,
                        PInvolvement,
                        ClientEID,
                        SecondOfficer,
                        SecondAssignment,
                        FinalReportVersion,
                        ToTime};
                this.Rows.Add(rowIncidentRow);
                return rowIncidentRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncidentRow FindByid(int id) {
                return ((IncidentRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                IncidentDataTable cln = ((IncidentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new IncidentDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnAgency = base.Columns["Agency"];
                this.columnReportNumber = base.Columns["ReportNumber"];
                this.columnSupplementNumber = base.Columns["SupplementNumber"];
                this.columnReportedDate = base.Columns["ReportedDate"];
                this.columnReportedTime = base.Columns["ReportedTime"];
                this.columnCADCallNumber = base.Columns["CADCallNumber"];
                this.columnStatus = base.Columns["Status"];
                this.columnNatureOfCall = base.Columns["NatureOfCall"];
                this.columnPropertyId = base.Columns["PropertyId"];
                this.columnUnitNumber = base.Columns["UnitNumber"];
                this.columnCity = base.Columns["City"];
                this.columnZIPCode = base.Columns["ZIPCode"];
                this.columnRepDist = base.Columns["RepDist"];
                this.columnBeat = base.Columns["Beat"];
                this.columnArea = base.Columns["Area"];
                this.columnFromDate = base.Columns["FromDate"];
                this.columnFromTime = base.Columns["FromTime"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnOfficer = base.Columns["Officer"];
                this.columnAssignment = base.Columns["Assignment"];
                this.columnConfidential = base.Columns["Confidential"];
                this.columnCmdrRpt = base.Columns["CmdrRpt"];
                this.columnEnteredBy = base.Columns["EnteredBy"];
                this.columnEnteredBy2 = base.Columns["EnteredBy2"];
                this.columnReviewOfficer = base.Columns["ReviewOfficer"];
                this.columnRCStatus = base.Columns["RCStatus"];
                this.columnRCStatusDate = base.Columns["RCStatusDate"];
                this.columnRCStatusTime = base.Columns["RCStatusTime"];
                this.columnExtraToReport = base.Columns["ExtraToReport"];
                this.columnPInvolvementNumber = base.Columns["PInvolvementNumber"];
                this.columnNNarative = base.Columns["NNarative"];
                this.columnPPlaceOfBirth = base.Columns["PPlaceOfBirth"];
                this.columnPRelationToOffender = base.Columns["PRelationToOffender"];
                this.columnPDomViolence = base.Columns["PDomViolence"];
                this.columnPExtentOfInjury = base.Columns["PExtentOfInjury"];
                this.columnPMeansOfAttack = base.Columns["PMeansOfAttack"];
                this.columnPConfidential = base.Columns["PConfidential"];
                this.columnPEthnicity = base.Columns["PEthnicity"];
                this.columnPSkin = base.Columns["PSkin"];
                this.columnPEyeColor = base.Columns["PEyeColor"];
                this.columnPHairColor = base.Columns["PHairColor"];
                this.columnPToWeight = base.Columns["PToWeight"];
                this.columnPWeight = base.Columns["PWeight"];
                this.columnPToHeight = base.Columns["PToHeight"];
                this.columnPHeight = base.Columns["PHeight"];
                this.columnPJuvenile = base.Columns["PJuvenile"];
                this.columnPToAge = base.Columns["PToAge"];
                this.columnPAge = base.Columns["PAge"];
                this.columnPDOB = base.Columns["PDOB"];
                this.columnPSex = base.Columns["PSex"];
                this.columnPRace = base.Columns["PRace"];
                this.columnPMini = base.Columns["PMini"];
                this.columnPName = base.Columns["PName"];
                this.columnPType = base.Columns["PType"];
                this.columnPInvolvement = base.Columns["PInvolvement"];
                this.columnClientEID = base.Columns["ClientEID"];
                this.columnSecondOfficer = base.Columns["SecondOfficer"];
                this.columnSecondAssignment = base.Columns["SecondAssignment"];
                this.columnFinalReportVersion = base.Columns["FinalReportVersion"];
                this.columnToTime = base.Columns["ToTime"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnAgency = new System.Data.DataColumn("Agency", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgency);
                this.columnReportNumber = new System.Data.DataColumn("ReportNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportNumber);
                this.columnSupplementNumber = new System.Data.DataColumn("SupplementNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplementNumber);
                this.columnReportedDate = new System.Data.DataColumn("ReportedDate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportedDate);
                this.columnReportedTime = new System.Data.DataColumn("ReportedTime", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportedTime);
                this.columnCADCallNumber = new System.Data.DataColumn("CADCallNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCADCallNumber);
                this.columnStatus = new System.Data.DataColumn("Status", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnNatureOfCall = new System.Data.DataColumn("NatureOfCall", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNatureOfCall);
                this.columnPropertyId = new System.Data.DataColumn("PropertyId", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyId);
                this.columnUnitNumber = new System.Data.DataColumn("UnitNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitNumber);
                this.columnCity = new System.Data.DataColumn("City", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnZIPCode = new System.Data.DataColumn("ZIPCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIPCode);
                this.columnRepDist = new System.Data.DataColumn("RepDist", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepDist);
                this.columnBeat = new System.Data.DataColumn("Beat", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeat);
                this.columnArea = new System.Data.DataColumn("Area", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea);
                this.columnFromDate = new System.Data.DataColumn("FromDate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnFromTime = new System.Data.DataColumn("FromTime", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromTime);
                this.columnToDate = new System.Data.DataColumn("ToDate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnOfficer = new System.Data.DataColumn("Officer", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficer);
                this.columnAssignment = new System.Data.DataColumn("Assignment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignment);
                this.columnConfidential = new System.Data.DataColumn("Confidential", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfidential);
                this.columnCmdrRpt = new System.Data.DataColumn("CmdrRpt", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCmdrRpt);
                this.columnEnteredBy = new System.Data.DataColumn("EnteredBy", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnteredBy);
                this.columnEnteredBy2 = new System.Data.DataColumn("EnteredBy2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnteredBy2);
                this.columnReviewOfficer = new System.Data.DataColumn("ReviewOfficer", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfficer);
                this.columnRCStatus = new System.Data.DataColumn("RCStatus", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCStatus);
                this.columnRCStatusDate = new System.Data.DataColumn("RCStatusDate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCStatusDate);
                this.columnRCStatusTime = new System.Data.DataColumn("RCStatusTime", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCStatusTime);
                this.columnExtraToReport = new System.Data.DataColumn("ExtraToReport", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraToReport);
                this.columnPInvolvementNumber = new System.Data.DataColumn("PInvolvementNumber", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPInvolvementNumber);
                this.columnNNarative = new System.Data.DataColumn("NNarative", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNNarative);
                this.columnPPlaceOfBirth = new System.Data.DataColumn("PPlaceOfBirth", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPlaceOfBirth);
                this.columnPRelationToOffender = new System.Data.DataColumn("PRelationToOffender", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRelationToOffender);
                this.columnPDomViolence = new System.Data.DataColumn("PDomViolence", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPDomViolence);
                this.columnPExtentOfInjury = new System.Data.DataColumn("PExtentOfInjury", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPExtentOfInjury);
                this.columnPMeansOfAttack = new System.Data.DataColumn("PMeansOfAttack", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMeansOfAttack);
                this.columnPConfidential = new System.Data.DataColumn("PConfidential", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPConfidential);
                this.columnPEthnicity = new System.Data.DataColumn("PEthnicity", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPEthnicity);
                this.columnPSkin = new System.Data.DataColumn("PSkin", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSkin);
                this.columnPEyeColor = new System.Data.DataColumn("PEyeColor", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPEyeColor);
                this.columnPHairColor = new System.Data.DataColumn("PHairColor", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHairColor);
                this.columnPToWeight = new System.Data.DataColumn("PToWeight", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPToWeight);
                this.columnPWeight = new System.Data.DataColumn("PWeight", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPWeight);
                this.columnPToHeight = new System.Data.DataColumn("PToHeight", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPToHeight);
                this.columnPHeight = new System.Data.DataColumn("PHeight", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHeight);
                this.columnPJuvenile = new System.Data.DataColumn("PJuvenile", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPJuvenile);
                this.columnPToAge = new System.Data.DataColumn("PToAge", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPToAge);
                this.columnPAge = new System.Data.DataColumn("PAge", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAge);
                this.columnPDOB = new System.Data.DataColumn("PDOB", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPDOB);
                this.columnPSex = new System.Data.DataColumn("PSex", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPSex);
                this.columnPRace = new System.Data.DataColumn("PRace", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRace);
                this.columnPMini = new System.Data.DataColumn("PMini", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMini);
                this.columnPName = new System.Data.DataColumn("PName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPName);
                this.columnPType = new System.Data.DataColumn("PType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPType);
                this.columnPInvolvement = new System.Data.DataColumn("PInvolvement", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPInvolvement);
                this.columnClientEID = new System.Data.DataColumn("ClientEID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientEID);
                this.columnSecondOfficer = new System.Data.DataColumn("SecondOfficer", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondOfficer);
                this.columnSecondAssignment = new System.Data.DataColumn("SecondAssignment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondAssignment);
                this.columnFinalReportVersion = new System.Data.DataColumn("FinalReportVersion", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalReportVersion);
                this.columnToTime = new System.Data.DataColumn("ToTime", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnToTime);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnAgency.AllowDBNull = false;
                this.columnReportNumber.AllowDBNull = false;
                this.columnSupplementNumber.AllowDBNull = false;
                this.columnReportedDate.AllowDBNull = false;
                this.columnReportedTime.AllowDBNull = false;
                this.columnCADCallNumber.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
                this.columnNatureOfCall.AllowDBNull = false;
                this.columnPropertyId.AllowDBNull = false;
                this.columnUnitNumber.AllowDBNull = false;
                this.columnCity.AllowDBNull = false;
                this.columnZIPCode.AllowDBNull = false;
                this.columnRepDist.AllowDBNull = false;
                this.columnBeat.AllowDBNull = false;
                this.columnArea.AllowDBNull = false;
                this.columnFromDate.AllowDBNull = false;
                this.columnFromTime.AllowDBNull = false;
                this.columnToDate.AllowDBNull = false;
                this.columnOfficer.AllowDBNull = false;
                this.columnAssignment.AllowDBNull = false;
                this.columnConfidential.AllowDBNull = false;
                this.columnCmdrRpt.AllowDBNull = false;
                this.columnEnteredBy.AllowDBNull = false;
                this.columnEnteredBy2.AllowDBNull = false;
                this.columnReviewOfficer.AllowDBNull = false;
                this.columnRCStatus.AllowDBNull = false;
                this.columnRCStatusDate.AllowDBNull = false;
                this.columnRCStatusTime.AllowDBNull = false;
                this.columnExtraToReport.AllowDBNull = false;
                this.columnPInvolvementNumber.AllowDBNull = false;
                this.columnNNarative.AllowDBNull = false;
                this.columnPPlaceOfBirth.AllowDBNull = false;
                this.columnPRelationToOffender.AllowDBNull = false;
                this.columnPDomViolence.AllowDBNull = false;
                this.columnPExtentOfInjury.AllowDBNull = false;
                this.columnPMeansOfAttack.AllowDBNull = false;
                this.columnPConfidential.AllowDBNull = false;
                this.columnPEthnicity.AllowDBNull = false;
                this.columnPSkin.AllowDBNull = false;
                this.columnPEyeColor.AllowDBNull = false;
                this.columnPHairColor.AllowDBNull = false;
                this.columnPToWeight.AllowDBNull = false;
                this.columnPWeight.AllowDBNull = false;
                this.columnPToHeight.AllowDBNull = false;
                this.columnPHeight.AllowDBNull = false;
                this.columnPJuvenile.AllowDBNull = false;
                this.columnPToAge.AllowDBNull = false;
                this.columnPAge.AllowDBNull = false;
                this.columnPDOB.AllowDBNull = false;
                this.columnPSex.AllowDBNull = false;
                this.columnPRace.AllowDBNull = false;
                this.columnPMini.AllowDBNull = false;
                this.columnPName.AllowDBNull = false;
                this.columnPType.AllowDBNull = false;
                this.columnPInvolvement.AllowDBNull = false;
                this.columnClientEID.AllowDBNull = false;
                this.columnSecondOfficer.AllowDBNull = false;
                this.columnSecondAssignment.AllowDBNull = false;
                this.columnFinalReportVersion.AllowDBNull = false;
                this.columnToTime.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.MySql.MySqlConnection("User Id=sql29409;Password=Aa3969889!;Host=sql29409.db.10825756.hostedresource.com" +
                            ";Database=sql29409;");
                }
                this.SelectCommand = new Devart.Data.MySql.MySqlCommand(@"SELECT        id, Agency, ReportNumber, SupplementNumber, ReportedDate, ReportedTime, CADCallNumber, Status, NatureOfCall, PropertyId, UnitNumber, City, ZIPCode, RepDist, Beat, Area, FromDate, FromTime, ToDate, 
                         Officer, Assignment, Confidential, CmdrRpt, EnteredBy, EnteredBy2, ReviewOfficer, RCStatus, RCStatusDate, RCStatusTime, ExtraToReport, PInvolvementNumber, NNarative, PPlaceOfBirth, PRelationToOffender, 
                         PDomViolence, PExtentOfInjury, PMeansOfAttack, PConfidential, PEthnicity, PSkin, PEyeColor, PHairColor, PToWeight, PWeight, PToHeight, PHeight, PJuvenile, PToAge, PAge, PDOB, PSex, PRace, PMini, PName, 
                         PType, PInvolvement, ClientEID, `2ndOfficer`, `2ndAssignment`, FinalReportVersion, ToTime
FROM            Incident", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.MySql.MySqlCommand("INSERT INTO `sql29409`.`Incident` (`Agency`, `ReportNumber`, `SupplementNumber`, " +
                        "`ReportedDate`, `ReportedTime`, `CADCallNumber`, `Status`, `NatureOfCall`, `Prop" +
                        "ertyId`, `UnitNumber`, `City`, `ZIPCode`, `RepDist`, `Beat`, `Area`, `FromDate`," +
                        " `FromTime`, `ToDate`, `Officer`, `Assignment`, `Confidential`, `CmdrRpt`, `Ente" +
                        "redBy`, `EnteredBy2`, `ReviewOfficer`, `RCStatus`, `RCStatusDate`, `RCStatusTime" +
                        "`, `ExtraToReport`, `PInvolvementNumber`, `NNarative`, `PPlaceOfBirth`, `PRelati" +
                        "onToOffender`, `PDomViolence`, `PExtentOfInjury`, `PMeansOfAttack`, `PConfidenti" +
                        "al`, `PEthnicity`, `PSkin`, `PEyeColor`, `PHairColor`, `PToWeight`, `PWeight`, `" +
                        "PToHeight`, `PHeight`, `PJuvenile`, `PToAge`, `PAge`, `PDOB`, `PSex`, `PRace`, `" +
                        "PMini`, `PName`, `PType`, `PInvolvement`, `ClientEID`, `2ndOfficer`, `2ndAssignm" +
                        "ent`, `FinalReportVersion`, `ToTime`) VALUES (:Agency, :ReportNumber, :Supplemen" +
                        "tNumber, :ReportedDate, :ReportedTime, :CADCallNumber, :Status, :NatureOfCall, :" +
                        "PropertyId, :UnitNumber, :City, :ZIPCode, :RepDist, :Beat, :Area, :FromDate, :Fr" +
                        "omTime, :ToDate, :Officer, :Assignment, :Confidential, :CmdrRpt, :EnteredBy, :En" +
                        "teredBy2, :ReviewOfficer, :RCStatus, :RCStatusDate, :RCStatusTime, :ExtraToRepor" +
                        "t, :PInvolvementNumber, :NNarative, :PPlaceOfBirth, :PRelationToOffender, :PDomV" +
                        "iolence, :PExtentOfInjury, :PMeansOfAttack, :PConfidential, :PEthnicity, :PSkin," +
                        " :PEyeColor, :PHairColor, :PToWeight, :PWeight, :PToHeight, :PHeight, :PJuvenile" +
                        ", :PToAge, :PAge, :PDOB, :PSex, :PRace, :PMini, :PName, :PType, :PInvolvement, :" +
                        "ClientEID, :p1, :p3, :FinalReportVersion, :ToTime)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.MySql.MySqlParameter param;
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Agency";
                param.Size = 0;
                param.SourceColumn = "Agency";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ReportNumber";
                param.Size = 0;
                param.SourceColumn = "ReportNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "SupplementNumber";
                param.Size = 0;
                param.SourceColumn = "SupplementNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ReportedDate";
                param.Size = 0;
                param.SourceColumn = "ReportedDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ReportedTime";
                param.Size = 0;
                param.SourceColumn = "ReportedTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "CADCallNumber";
                param.Size = 0;
                param.SourceColumn = "CADCallNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Status";
                param.Size = 0;
                param.SourceColumn = "Status";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "NatureOfCall";
                param.Size = 0;
                param.SourceColumn = "NatureOfCall";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PropertyId";
                param.Size = 0;
                param.SourceColumn = "PropertyId";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "UnitNumber";
                param.Size = 0;
                param.SourceColumn = "UnitNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "City";
                param.Size = 0;
                param.SourceColumn = "City";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ZIPCode";
                param.Size = 0;
                param.SourceColumn = "ZIPCode";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "RepDist";
                param.Size = 0;
                param.SourceColumn = "RepDist";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Beat";
                param.Size = 0;
                param.SourceColumn = "Beat";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Area";
                param.Size = 0;
                param.SourceColumn = "Area";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "FromDate";
                param.Size = 0;
                param.SourceColumn = "FromDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "FromTime";
                param.Size = 0;
                param.SourceColumn = "FromTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ToDate";
                param.Size = 0;
                param.SourceColumn = "ToDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Officer";
                param.Size = 0;
                param.SourceColumn = "Officer";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Assignment";
                param.Size = 0;
                param.SourceColumn = "Assignment";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Confidential";
                param.Size = 0;
                param.SourceColumn = "Confidential";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "CmdrRpt";
                param.Size = 0;
                param.SourceColumn = "CmdrRpt";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "EnteredBy";
                param.Size = 0;
                param.SourceColumn = "EnteredBy";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "EnteredBy2";
                param.Size = 0;
                param.SourceColumn = "EnteredBy2";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ReviewOfficer";
                param.Size = 0;
                param.SourceColumn = "ReviewOfficer";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "RCStatus";
                param.Size = 0;
                param.SourceColumn = "RCStatus";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "RCStatusDate";
                param.Size = 0;
                param.SourceColumn = "RCStatusDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "RCStatusTime";
                param.Size = 0;
                param.SourceColumn = "RCStatusTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.String;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ExtraToReport";
                param.Size = 0;
                param.SourceColumn = "ExtraToReport";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PInvolvementNumber";
                param.Size = 0;
                param.SourceColumn = "PInvolvementNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.String;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "NNarative";
                param.Size = 0;
                param.SourceColumn = "NNarative";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PPlaceOfBirth";
                param.Size = 0;
                param.SourceColumn = "PPlaceOfBirth";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PRelationToOffender";
                param.Size = 0;
                param.SourceColumn = "PRelationToOffender";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PDomViolence";
                param.Size = 0;
                param.SourceColumn = "PDomViolence";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PExtentOfInjury";
                param.Size = 0;
                param.SourceColumn = "PExtentOfInjury";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PMeansOfAttack";
                param.Size = 0;
                param.SourceColumn = "PMeansOfAttack";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PConfidential";
                param.Size = 0;
                param.SourceColumn = "PConfidential";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PEthnicity";
                param.Size = 0;
                param.SourceColumn = "PEthnicity";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PSkin";
                param.Size = 0;
                param.SourceColumn = "PSkin";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PEyeColor";
                param.Size = 0;
                param.SourceColumn = "PEyeColor";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PHairColor";
                param.Size = 0;
                param.SourceColumn = "PHairColor";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PToWeight";
                param.Size = 0;
                param.SourceColumn = "PToWeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PWeight";
                param.Size = 0;
                param.SourceColumn = "PWeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PToHeight";
                param.Size = 0;
                param.SourceColumn = "PToHeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PHeight";
                param.Size = 0;
                param.SourceColumn = "PHeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PJuvenile";
                param.Size = 0;
                param.SourceColumn = "PJuvenile";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PToAge";
                param.Size = 0;
                param.SourceColumn = "PToAge";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PAge";
                param.Size = 0;
                param.SourceColumn = "PAge";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PDOB";
                param.Size = 0;
                param.SourceColumn = "PDOB";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PSex";
                param.Size = 0;
                param.SourceColumn = "PSex";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PRace";
                param.Size = 0;
                param.SourceColumn = "PRace";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PMini";
                param.Size = 0;
                param.SourceColumn = "PMini";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PName";
                param.Size = 0;
                param.SourceColumn = "PName";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PType";
                param.Size = 0;
                param.SourceColumn = "PType";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PInvolvement";
                param.Size = 0;
                param.SourceColumn = "PInvolvement";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ClientEID";
                param.Size = 0;
                param.SourceColumn = "ClientEID";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "p1";
                param.Size = 0;
                param.SourceColumn = "2ndOfficer";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "p3";
                param.Size = 0;
                param.SourceColumn = "2ndAssignment";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "FinalReportVersion";
                param.Size = 0;
                param.SourceColumn = "FinalReportVersion";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ToTime";
                param.Size = 0;
                param.SourceColumn = "ToTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.MySql.MySqlCommand("UPDATE `sql29409`.`Incident` SET `Agency` = :Agency, `ReportNumber` = :ReportNumb" +
                        "er, `SupplementNumber` = :SupplementNumber, `ReportedDate` = :ReportedDate, `Rep" +
                        "ortedTime` = :ReportedTime, `CADCallNumber` = :CADCallNumber, `Status` = :Status" +
                        ", `NatureOfCall` = :NatureOfCall, `PropertyId` = :PropertyId, `UnitNumber` = :Un" +
                        "itNumber, `City` = :City, `ZIPCode` = :ZIPCode, `RepDist` = :RepDist, `Beat` = :" +
                        "Beat, `Area` = :Area, `FromDate` = :FromDate, `FromTime` = :FromTime, `ToDate` =" +
                        " :ToDate, `Officer` = :Officer, `Assignment` = :Assignment, `Confidential` = :Co" +
                        "nfidential, `CmdrRpt` = :CmdrRpt, `EnteredBy` = :EnteredBy, `EnteredBy2` = :Ente" +
                        "redBy2, `ReviewOfficer` = :ReviewOfficer, `RCStatus` = :RCStatus, `RCStatusDate`" +
                        " = :RCStatusDate, `RCStatusTime` = :RCStatusTime, `ExtraToReport` = :ExtraToRepo" +
                        "rt, `PInvolvementNumber` = :PInvolvementNumber, `NNarative` = :NNarative, `PPlac" +
                        "eOfBirth` = :PPlaceOfBirth, `PRelationToOffender` = :PRelationToOffender, `PDomV" +
                        "iolence` = :PDomViolence, `PExtentOfInjury` = :PExtentOfInjury, `PMeansOfAttack`" +
                        " = :PMeansOfAttack, `PConfidential` = :PConfidential, `PEthnicity` = :PEthnicity" +
                        ", `PSkin` = :PSkin, `PEyeColor` = :PEyeColor, `PHairColor` = :PHairColor, `PToWe" +
                        "ight` = :PToWeight, `PWeight` = :PWeight, `PToHeight` = :PToHeight, `PHeight` = " +
                        ":PHeight, `PJuvenile` = :PJuvenile, `PToAge` = :PToAge, `PAge` = :PAge, `PDOB` =" +
                        " :PDOB, `PSex` = :PSex, `PRace` = :PRace, `PMini` = :PMini, `PName` = :PName, `P" +
                        "Type` = :PType, `PInvolvement` = :PInvolvement, `ClientEID` = :ClientEID, `2ndOf" +
                        "ficer` = :p1, `2ndAssignment` = :p3, `FinalReportVersion` = :FinalReportVersion," +
                        " `ToTime` = :ToTime WHERE ((`id` = :Original_id) AND (`Agency` = :Original_Agenc" +
                        "y) AND (`ReportNumber` = :Original_ReportNumber) AND (`SupplementNumber` = :Orig" +
                        "inal_SupplementNumber) AND (`ReportedDate` = :Original_ReportedDate) AND (`Repor" +
                        "tedTime` = :Original_ReportedTime) AND (`CADCallNumber` = :Original_CADCallNumbe" +
                        "r) AND (`Status` = :Original_Status) AND (`NatureOfCall` = :Original_NatureOfCal" +
                        "l) AND (`PropertyId` = :Original_PropertyId) AND (`UnitNumber` = :Original_UnitN" +
                        "umber) AND (`City` = :Original_City) AND (`ZIPCode` = :Original_ZIPCode) AND (`R" +
                        "epDist` = :Original_RepDist) AND (`Beat` = :Original_Beat) AND (`Area` = :Origin" +
                        "al_Area) AND (`FromDate` = :Original_FromDate) AND (`FromTime` = :Original_FromT" +
                        "ime) AND (`ToDate` = :Original_ToDate) AND (`Officer` = :Original_Officer) AND (" +
                        "`Assignment` = :Original_Assignment) AND (`Confidential` = :Original_Confidentia" +
                        "l) AND (`CmdrRpt` = :Original_CmdrRpt) AND (`EnteredBy` = :Original_EnteredBy) A" +
                        "ND (`EnteredBy2` = :Original_EnteredBy2) AND (`ReviewOfficer` = :Original_Review" +
                        "Officer) AND (`RCStatus` = :Original_RCStatus) AND (`RCStatusDate` = :Original_R" +
                        "CStatusDate) AND (`RCStatusTime` = :Original_RCStatusTime) AND (`PInvolvementNum" +
                        "ber` = :Original_PInvolvementNumber) AND (`PPlaceOfBirth` = :Original_PPlaceOfBi" +
                        "rth) AND (`PRelationToOffender` = :Original_PRelationToOffender) AND (`PDomViole" +
                        "nce` = :Original_PDomViolence) AND (`PExtentOfInjury` = :Original_PExtentOfInjur" +
                        "y) AND (`PMeansOfAttack` = :Original_PMeansOfAttack) AND (`PConfidential` = :Ori" +
                        "ginal_PConfidential) AND (`PEthnicity` = :Original_PEthnicity) AND (`PSkin` = :O" +
                        "riginal_PSkin) AND (`PEyeColor` = :Original_PEyeColor) AND (`PHairColor` = :Orig" +
                        "inal_PHairColor) AND (`PToWeight` = :Original_PToWeight) AND (`PWeight` = :Origi" +
                        "nal_PWeight) AND (`PToHeight` = :Original_PToHeight) AND (`PHeight` = :Original_" +
                        "PHeight) AND (`PJuvenile` = :Original_PJuvenile) AND (`PToAge` = :Original_PToAg" +
                        "e) AND (`PAge` = :Original_PAge) AND (`PDOB` = :Original_PDOB) AND (`PSex` = :Or" +
                        "iginal_PSex) AND (`PRace` = :Original_PRace) AND (`PMini` = :Original_PMini) AND" +
                        " (`PName` = :Original_PName) AND (`PType` = :Original_PType) AND (`PInvolvement`" +
                        " = :Original_PInvolvement) AND (`ClientEID` = :Original_ClientEID) AND (`2ndOffi" +
                        "cer` = :p2) AND (`2ndAssignment` = :p4) AND (`FinalReportVersion` = :Original_Fi" +
                        "nalReportVersion) AND (`ToTime` = :Original_ToTime))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Agency";
                param.Size = 0;
                param.SourceColumn = "Agency";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ReportNumber";
                param.Size = 0;
                param.SourceColumn = "ReportNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "SupplementNumber";
                param.Size = 0;
                param.SourceColumn = "SupplementNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ReportedDate";
                param.Size = 0;
                param.SourceColumn = "ReportedDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ReportedTime";
                param.Size = 0;
                param.SourceColumn = "ReportedTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "CADCallNumber";
                param.Size = 0;
                param.SourceColumn = "CADCallNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Status";
                param.Size = 0;
                param.SourceColumn = "Status";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "NatureOfCall";
                param.Size = 0;
                param.SourceColumn = "NatureOfCall";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PropertyId";
                param.Size = 0;
                param.SourceColumn = "PropertyId";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "UnitNumber";
                param.Size = 0;
                param.SourceColumn = "UnitNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "City";
                param.Size = 0;
                param.SourceColumn = "City";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ZIPCode";
                param.Size = 0;
                param.SourceColumn = "ZIPCode";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "RepDist";
                param.Size = 0;
                param.SourceColumn = "RepDist";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Beat";
                param.Size = 0;
                param.SourceColumn = "Beat";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Area";
                param.Size = 0;
                param.SourceColumn = "Area";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "FromDate";
                param.Size = 0;
                param.SourceColumn = "FromDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "FromTime";
                param.Size = 0;
                param.SourceColumn = "FromTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ToDate";
                param.Size = 0;
                param.SourceColumn = "ToDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Officer";
                param.Size = 0;
                param.SourceColumn = "Officer";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Assignment";
                param.Size = 0;
                param.SourceColumn = "Assignment";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Confidential";
                param.Size = 0;
                param.SourceColumn = "Confidential";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "CmdrRpt";
                param.Size = 0;
                param.SourceColumn = "CmdrRpt";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "EnteredBy";
                param.Size = 0;
                param.SourceColumn = "EnteredBy";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "EnteredBy2";
                param.Size = 0;
                param.SourceColumn = "EnteredBy2";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ReviewOfficer";
                param.Size = 0;
                param.SourceColumn = "ReviewOfficer";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "RCStatus";
                param.Size = 0;
                param.SourceColumn = "RCStatus";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "RCStatusDate";
                param.Size = 0;
                param.SourceColumn = "RCStatusDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "RCStatusTime";
                param.Size = 0;
                param.SourceColumn = "RCStatusTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.String;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ExtraToReport";
                param.Size = 0;
                param.SourceColumn = "ExtraToReport";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PInvolvementNumber";
                param.Size = 0;
                param.SourceColumn = "PInvolvementNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.String;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "NNarative";
                param.Size = 0;
                param.SourceColumn = "NNarative";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PPlaceOfBirth";
                param.Size = 0;
                param.SourceColumn = "PPlaceOfBirth";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PRelationToOffender";
                param.Size = 0;
                param.SourceColumn = "PRelationToOffender";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PDomViolence";
                param.Size = 0;
                param.SourceColumn = "PDomViolence";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PExtentOfInjury";
                param.Size = 0;
                param.SourceColumn = "PExtentOfInjury";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PMeansOfAttack";
                param.Size = 0;
                param.SourceColumn = "PMeansOfAttack";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PConfidential";
                param.Size = 0;
                param.SourceColumn = "PConfidential";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PEthnicity";
                param.Size = 0;
                param.SourceColumn = "PEthnicity";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PSkin";
                param.Size = 0;
                param.SourceColumn = "PSkin";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PEyeColor";
                param.Size = 0;
                param.SourceColumn = "PEyeColor";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PHairColor";
                param.Size = 0;
                param.SourceColumn = "PHairColor";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PToWeight";
                param.Size = 0;
                param.SourceColumn = "PToWeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PWeight";
                param.Size = 0;
                param.SourceColumn = "PWeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PToHeight";
                param.Size = 0;
                param.SourceColumn = "PToHeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PHeight";
                param.Size = 0;
                param.SourceColumn = "PHeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PJuvenile";
                param.Size = 0;
                param.SourceColumn = "PJuvenile";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PToAge";
                param.Size = 0;
                param.SourceColumn = "PToAge";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PAge";
                param.Size = 0;
                param.SourceColumn = "PAge";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PDOB";
                param.Size = 0;
                param.SourceColumn = "PDOB";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PSex";
                param.Size = 0;
                param.SourceColumn = "PSex";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PRace";
                param.Size = 0;
                param.SourceColumn = "PRace";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PMini";
                param.Size = 0;
                param.SourceColumn = "PMini";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PName";
                param.Size = 0;
                param.SourceColumn = "PName";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PType";
                param.Size = 0;
                param.SourceColumn = "PType";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "PInvolvement";
                param.Size = 0;
                param.SourceColumn = "PInvolvement";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ClientEID";
                param.Size = 0;
                param.SourceColumn = "ClientEID";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "p1";
                param.Size = 0;
                param.SourceColumn = "2ndOfficer";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "p3";
                param.Size = 0;
                param.SourceColumn = "2ndAssignment";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "FinalReportVersion";
                param.Size = 0;
                param.SourceColumn = "FinalReportVersion";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ToTime";
                param.Size = 0;
                param.SourceColumn = "ToTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_id";
                param.Size = 0;
                param.SourceColumn = "id";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Agency";
                param.Size = 0;
                param.SourceColumn = "Agency";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ReportNumber";
                param.Size = 0;
                param.SourceColumn = "ReportNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_SupplementNumber";
                param.Size = 0;
                param.SourceColumn = "SupplementNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ReportedDate";
                param.Size = 0;
                param.SourceColumn = "ReportedDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ReportedTime";
                param.Size = 0;
                param.SourceColumn = "ReportedTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_CADCallNumber";
                param.Size = 0;
                param.SourceColumn = "CADCallNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Status";
                param.Size = 0;
                param.SourceColumn = "Status";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_NatureOfCall";
                param.Size = 0;
                param.SourceColumn = "NatureOfCall";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PropertyId";
                param.Size = 0;
                param.SourceColumn = "PropertyId";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_UnitNumber";
                param.Size = 0;
                param.SourceColumn = "UnitNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_City";
                param.Size = 0;
                param.SourceColumn = "City";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ZIPCode";
                param.Size = 0;
                param.SourceColumn = "ZIPCode";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_RepDist";
                param.Size = 0;
                param.SourceColumn = "RepDist";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Beat";
                param.Size = 0;
                param.SourceColumn = "Beat";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Area";
                param.Size = 0;
                param.SourceColumn = "Area";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_FromDate";
                param.Size = 0;
                param.SourceColumn = "FromDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_FromTime";
                param.Size = 0;
                param.SourceColumn = "FromTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ToDate";
                param.Size = 0;
                param.SourceColumn = "ToDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Officer";
                param.Size = 0;
                param.SourceColumn = "Officer";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Assignment";
                param.Size = 0;
                param.SourceColumn = "Assignment";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Confidential";
                param.Size = 0;
                param.SourceColumn = "Confidential";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_CmdrRpt";
                param.Size = 0;
                param.SourceColumn = "CmdrRpt";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_EnteredBy";
                param.Size = 0;
                param.SourceColumn = "EnteredBy";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_EnteredBy2";
                param.Size = 0;
                param.SourceColumn = "EnteredBy2";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ReviewOfficer";
                param.Size = 0;
                param.SourceColumn = "ReviewOfficer";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_RCStatus";
                param.Size = 0;
                param.SourceColumn = "RCStatus";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_RCStatusDate";
                param.Size = 0;
                param.SourceColumn = "RCStatusDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_RCStatusTime";
                param.Size = 0;
                param.SourceColumn = "RCStatusTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PInvolvementNumber";
                param.Size = 0;
                param.SourceColumn = "PInvolvementNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PPlaceOfBirth";
                param.Size = 0;
                param.SourceColumn = "PPlaceOfBirth";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PRelationToOffender";
                param.Size = 0;
                param.SourceColumn = "PRelationToOffender";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PDomViolence";
                param.Size = 0;
                param.SourceColumn = "PDomViolence";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PExtentOfInjury";
                param.Size = 0;
                param.SourceColumn = "PExtentOfInjury";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PMeansOfAttack";
                param.Size = 0;
                param.SourceColumn = "PMeansOfAttack";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PConfidential";
                param.Size = 0;
                param.SourceColumn = "PConfidential";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PEthnicity";
                param.Size = 0;
                param.SourceColumn = "PEthnicity";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PSkin";
                param.Size = 0;
                param.SourceColumn = "PSkin";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PEyeColor";
                param.Size = 0;
                param.SourceColumn = "PEyeColor";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PHairColor";
                param.Size = 0;
                param.SourceColumn = "PHairColor";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PToWeight";
                param.Size = 0;
                param.SourceColumn = "PToWeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PWeight";
                param.Size = 0;
                param.SourceColumn = "PWeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PToHeight";
                param.Size = 0;
                param.SourceColumn = "PToHeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PHeight";
                param.Size = 0;
                param.SourceColumn = "PHeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PJuvenile";
                param.Size = 0;
                param.SourceColumn = "PJuvenile";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PToAge";
                param.Size = 0;
                param.SourceColumn = "PToAge";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PAge";
                param.Size = 0;
                param.SourceColumn = "PAge";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PDOB";
                param.Size = 0;
                param.SourceColumn = "PDOB";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PSex";
                param.Size = 0;
                param.SourceColumn = "PSex";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PRace";
                param.Size = 0;
                param.SourceColumn = "PRace";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PMini";
                param.Size = 0;
                param.SourceColumn = "PMini";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PName";
                param.Size = 0;
                param.SourceColumn = "PName";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PType";
                param.Size = 0;
                param.SourceColumn = "PType";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PInvolvement";
                param.Size = 0;
                param.SourceColumn = "PInvolvement";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ClientEID";
                param.Size = 0;
                param.SourceColumn = "ClientEID";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "p2";
                param.Size = 0;
                param.SourceColumn = "2ndOfficer";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "p4";
                param.Size = 0;
                param.SourceColumn = "2ndAssignment";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_FinalReportVersion";
                param.Size = 0;
                param.SourceColumn = "FinalReportVersion";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ToTime";
                param.Size = 0;
                param.SourceColumn = "ToTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.MySql.MySqlCommand("DELETE FROM `sql29409`.`Incident` WHERE ((`id` = :Original_id) AND (`Agency` = :O" +
                        "riginal_Agency) AND (`ReportNumber` = :Original_ReportNumber) AND (`SupplementNu" +
                        "mber` = :Original_SupplementNumber) AND (`ReportedDate` = :Original_ReportedDate" +
                        ") AND (`ReportedTime` = :Original_ReportedTime) AND (`CADCallNumber` = :Original" +
                        "_CADCallNumber) AND (`Status` = :Original_Status) AND (`NatureOfCall` = :Origina" +
                        "l_NatureOfCall) AND (`PropertyId` = :Original_PropertyId) AND (`UnitNumber` = :O" +
                        "riginal_UnitNumber) AND (`City` = :Original_City) AND (`ZIPCode` = :Original_ZIP" +
                        "Code) AND (`RepDist` = :Original_RepDist) AND (`Beat` = :Original_Beat) AND (`Ar" +
                        "ea` = :Original_Area) AND (`FromDate` = :Original_FromDate) AND (`FromTime` = :O" +
                        "riginal_FromTime) AND (`ToDate` = :Original_ToDate) AND (`Officer` = :Original_O" +
                        "fficer) AND (`Assignment` = :Original_Assignment) AND (`Confidential` = :Origina" +
                        "l_Confidential) AND (`CmdrRpt` = :Original_CmdrRpt) AND (`EnteredBy` = :Original" +
                        "_EnteredBy) AND (`EnteredBy2` = :Original_EnteredBy2) AND (`ReviewOfficer` = :Or" +
                        "iginal_ReviewOfficer) AND (`RCStatus` = :Original_RCStatus) AND (`RCStatusDate` " +
                        "= :Original_RCStatusDate) AND (`RCStatusTime` = :Original_RCStatusTime) AND (`PI" +
                        "nvolvementNumber` = :Original_PInvolvementNumber) AND (`PPlaceOfBirth` = :Origin" +
                        "al_PPlaceOfBirth) AND (`PRelationToOffender` = :Original_PRelationToOffender) AN" +
                        "D (`PDomViolence` = :Original_PDomViolence) AND (`PExtentOfInjury` = :Original_P" +
                        "ExtentOfInjury) AND (`PMeansOfAttack` = :Original_PMeansOfAttack) AND (`PConfide" +
                        "ntial` = :Original_PConfidential) AND (`PEthnicity` = :Original_PEthnicity) AND " +
                        "(`PSkin` = :Original_PSkin) AND (`PEyeColor` = :Original_PEyeColor) AND (`PHairC" +
                        "olor` = :Original_PHairColor) AND (`PToWeight` = :Original_PToWeight) AND (`PWei" +
                        "ght` = :Original_PWeight) AND (`PToHeight` = :Original_PToHeight) AND (`PHeight`" +
                        " = :Original_PHeight) AND (`PJuvenile` = :Original_PJuvenile) AND (`PToAge` = :O" +
                        "riginal_PToAge) AND (`PAge` = :Original_PAge) AND (`PDOB` = :Original_PDOB) AND " +
                        "(`PSex` = :Original_PSex) AND (`PRace` = :Original_PRace) AND (`PMini` = :Origin" +
                        "al_PMini) AND (`PName` = :Original_PName) AND (`PType` = :Original_PType) AND (`" +
                        "PInvolvement` = :Original_PInvolvement) AND (`ClientEID` = :Original_ClientEID) " +
                        "AND (`2ndOfficer` = :p2) AND (`2ndAssignment` = :p4) AND (`FinalReportVersion` =" +
                        " :Original_FinalReportVersion) AND (`ToTime` = :Original_ToTime))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_id";
                param.Size = 0;
                param.SourceColumn = "id";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Agency";
                param.Size = 0;
                param.SourceColumn = "Agency";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ReportNumber";
                param.Size = 0;
                param.SourceColumn = "ReportNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_SupplementNumber";
                param.Size = 0;
                param.SourceColumn = "SupplementNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ReportedDate";
                param.Size = 0;
                param.SourceColumn = "ReportedDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ReportedTime";
                param.Size = 0;
                param.SourceColumn = "ReportedTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_CADCallNumber";
                param.Size = 0;
                param.SourceColumn = "CADCallNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Status";
                param.Size = 0;
                param.SourceColumn = "Status";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_NatureOfCall";
                param.Size = 0;
                param.SourceColumn = "NatureOfCall";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PropertyId";
                param.Size = 0;
                param.SourceColumn = "PropertyId";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_UnitNumber";
                param.Size = 0;
                param.SourceColumn = "UnitNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_City";
                param.Size = 0;
                param.SourceColumn = "City";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ZIPCode";
                param.Size = 0;
                param.SourceColumn = "ZIPCode";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_RepDist";
                param.Size = 0;
                param.SourceColumn = "RepDist";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Beat";
                param.Size = 0;
                param.SourceColumn = "Beat";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Area";
                param.Size = 0;
                param.SourceColumn = "Area";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_FromDate";
                param.Size = 0;
                param.SourceColumn = "FromDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_FromTime";
                param.Size = 0;
                param.SourceColumn = "FromTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ToDate";
                param.Size = 0;
                param.SourceColumn = "ToDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Officer";
                param.Size = 0;
                param.SourceColumn = "Officer";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Assignment";
                param.Size = 0;
                param.SourceColumn = "Assignment";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_Confidential";
                param.Size = 0;
                param.SourceColumn = "Confidential";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_CmdrRpt";
                param.Size = 0;
                param.SourceColumn = "CmdrRpt";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_EnteredBy";
                param.Size = 0;
                param.SourceColumn = "EnteredBy";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_EnteredBy2";
                param.Size = 0;
                param.SourceColumn = "EnteredBy2";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ReviewOfficer";
                param.Size = 0;
                param.SourceColumn = "ReviewOfficer";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_RCStatus";
                param.Size = 0;
                param.SourceColumn = "RCStatus";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_RCStatusDate";
                param.Size = 0;
                param.SourceColumn = "RCStatusDate";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_RCStatusTime";
                param.Size = 0;
                param.SourceColumn = "RCStatusTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PInvolvementNumber";
                param.Size = 0;
                param.SourceColumn = "PInvolvementNumber";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PPlaceOfBirth";
                param.Size = 0;
                param.SourceColumn = "PPlaceOfBirth";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PRelationToOffender";
                param.Size = 0;
                param.SourceColumn = "PRelationToOffender";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PDomViolence";
                param.Size = 0;
                param.SourceColumn = "PDomViolence";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PExtentOfInjury";
                param.Size = 0;
                param.SourceColumn = "PExtentOfInjury";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PMeansOfAttack";
                param.Size = 0;
                param.SourceColumn = "PMeansOfAttack";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PConfidential";
                param.Size = 0;
                param.SourceColumn = "PConfidential";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PEthnicity";
                param.Size = 0;
                param.SourceColumn = "PEthnicity";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PSkin";
                param.Size = 0;
                param.SourceColumn = "PSkin";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PEyeColor";
                param.Size = 0;
                param.SourceColumn = "PEyeColor";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PHairColor";
                param.Size = 0;
                param.SourceColumn = "PHairColor";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PToWeight";
                param.Size = 0;
                param.SourceColumn = "PToWeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PWeight";
                param.Size = 0;
                param.SourceColumn = "PWeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PToHeight";
                param.Size = 0;
                param.SourceColumn = "PToHeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PHeight";
                param.Size = 0;
                param.SourceColumn = "PHeight";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PJuvenile";
                param.Size = 0;
                param.SourceColumn = "PJuvenile";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PToAge";
                param.Size = 0;
                param.SourceColumn = "PToAge";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PAge";
                param.Size = 0;
                param.SourceColumn = "PAge";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PDOB";
                param.Size = 0;
                param.SourceColumn = "PDOB";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PSex";
                param.Size = 0;
                param.SourceColumn = "PSex";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PRace";
                param.Size = 0;
                param.SourceColumn = "PRace";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PMini";
                param.Size = 0;
                param.SourceColumn = "PMini";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PName";
                param.Size = 0;
                param.SourceColumn = "PName";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PType";
                param.Size = 0;
                param.SourceColumn = "PType";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_PInvolvement";
                param.Size = 0;
                param.SourceColumn = "PInvolvement";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ClientEID";
                param.Size = 0;
                param.SourceColumn = "ClientEID";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "p2";
                param.Size = 0;
                param.SourceColumn = "2ndOfficer";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "p4";
                param.Size = 0;
                param.SourceColumn = "2ndAssignment";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_FinalReportVersion";
                param.Size = 0;
                param.SourceColumn = "FinalReportVersion";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.MySql.MySqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ToTime";
                param.Size = 0;
                param.SourceColumn = "ToTime";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "Incident";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("id", "id");
                this.TableMapping.ColumnMappings.Add("Agency", "Agency");
                this.TableMapping.ColumnMappings.Add("ReportNumber", "ReportNumber");
                this.TableMapping.ColumnMappings.Add("SupplementNumber", "SupplementNumber");
                this.TableMapping.ColumnMappings.Add("ReportedDate", "ReportedDate");
                this.TableMapping.ColumnMappings.Add("ReportedTime", "ReportedTime");
                this.TableMapping.ColumnMappings.Add("CADCallNumber", "CADCallNumber");
                this.TableMapping.ColumnMappings.Add("Status", "Status");
                this.TableMapping.ColumnMappings.Add("NatureOfCall", "NatureOfCall");
                this.TableMapping.ColumnMappings.Add("PropertyId", "PropertyId");
                this.TableMapping.ColumnMappings.Add("UnitNumber", "UnitNumber");
                this.TableMapping.ColumnMappings.Add("City", "City");
                this.TableMapping.ColumnMappings.Add("ZIPCode", "ZIPCode");
                this.TableMapping.ColumnMappings.Add("RepDist", "RepDist");
                this.TableMapping.ColumnMappings.Add("Beat", "Beat");
                this.TableMapping.ColumnMappings.Add("Area", "Area");
                this.TableMapping.ColumnMappings.Add("FromDate", "FromDate");
                this.TableMapping.ColumnMappings.Add("FromTime", "FromTime");
                this.TableMapping.ColumnMappings.Add("ToDate", "ToDate");
                this.TableMapping.ColumnMappings.Add("Officer", "Officer");
                this.TableMapping.ColumnMappings.Add("Assignment", "Assignment");
                this.TableMapping.ColumnMappings.Add("Confidential", "Confidential");
                this.TableMapping.ColumnMappings.Add("CmdrRpt", "CmdrRpt");
                this.TableMapping.ColumnMappings.Add("EnteredBy", "EnteredBy");
                this.TableMapping.ColumnMappings.Add("EnteredBy2", "EnteredBy2");
                this.TableMapping.ColumnMappings.Add("ReviewOfficer", "ReviewOfficer");
                this.TableMapping.ColumnMappings.Add("RCStatus", "RCStatus");
                this.TableMapping.ColumnMappings.Add("RCStatusDate", "RCStatusDate");
                this.TableMapping.ColumnMappings.Add("RCStatusTime", "RCStatusTime");
                this.TableMapping.ColumnMappings.Add("ExtraToReport", "ExtraToReport");
                this.TableMapping.ColumnMappings.Add("PInvolvementNumber", "PInvolvementNumber");
                this.TableMapping.ColumnMappings.Add("NNarative", "NNarative");
                this.TableMapping.ColumnMappings.Add("PPlaceOfBirth", "PPlaceOfBirth");
                this.TableMapping.ColumnMappings.Add("PRelationToOffender", "PRelationToOffender");
                this.TableMapping.ColumnMappings.Add("PDomViolence", "PDomViolence");
                this.TableMapping.ColumnMappings.Add("PExtentOfInjury", "PExtentOfInjury");
                this.TableMapping.ColumnMappings.Add("PMeansOfAttack", "PMeansOfAttack");
                this.TableMapping.ColumnMappings.Add("PConfidential", "PConfidential");
                this.TableMapping.ColumnMappings.Add("PEthnicity", "PEthnicity");
                this.TableMapping.ColumnMappings.Add("PSkin", "PSkin");
                this.TableMapping.ColumnMappings.Add("PEyeColor", "PEyeColor");
                this.TableMapping.ColumnMappings.Add("PHairColor", "PHairColor");
                this.TableMapping.ColumnMappings.Add("PToWeight", "PToWeight");
                this.TableMapping.ColumnMappings.Add("PWeight", "PWeight");
                this.TableMapping.ColumnMappings.Add("PToHeight", "PToHeight");
                this.TableMapping.ColumnMappings.Add("PHeight", "PHeight");
                this.TableMapping.ColumnMappings.Add("PJuvenile", "PJuvenile");
                this.TableMapping.ColumnMappings.Add("PToAge", "PToAge");
                this.TableMapping.ColumnMappings.Add("PAge", "PAge");
                this.TableMapping.ColumnMappings.Add("PDOB", "PDOB");
                this.TableMapping.ColumnMappings.Add("PSex", "PSex");
                this.TableMapping.ColumnMappings.Add("PRace", "PRace");
                this.TableMapping.ColumnMappings.Add("PMini", "PMini");
                this.TableMapping.ColumnMappings.Add("PName", "PName");
                this.TableMapping.ColumnMappings.Add("PType", "PType");
                this.TableMapping.ColumnMappings.Add("PInvolvement", "PInvolvement");
                this.TableMapping.ColumnMappings.Add("ClientEID", "ClientEID");
                this.TableMapping.ColumnMappings.Add("2ndOfficer", "SecondOfficer");
                this.TableMapping.ColumnMappings.Add("2ndAssignment", "SecondAssignment");
                this.TableMapping.ColumnMappings.Add("FinalReportVersion", "FinalReportVersion");
                this.TableMapping.ColumnMappings.Add("ToTime", "ToTime");
                this.CachedUpdates = true;
                this.FetchAll = true;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncidentRow NewIncidentRow() {
                return ((IncidentRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new IncidentRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(IncidentRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IncidentRowChanged != null)) {
                    this.IncidentRowChanged(this, new IncidentRowChangeEvent(((IncidentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IncidentRowChanging != null)) {
                    this.IncidentRowChanging(this, new IncidentRowChangeEvent(((IncidentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IncidentRowDeleted != null)) {
                    this.IncidentRowDeleted(this, new IncidentRowChangeEvent(((IncidentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IncidentRowDeleting != null)) {
                    this.IncidentRowDeleting(this, new IncidentRowChangeEvent(((IncidentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIncidentRow(IncidentRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IncidentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.847.0")]
        public partial class IncidentRow : System.Data.DataRow {
            
            private IncidentDataTable tableIncident;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IncidentRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIncident = ((IncidentDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableIncident.idColumn]));
                }
                set {
                    this[this.tableIncident.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Agency {
                get {
                    return ((string)(this[this.tableIncident.AgencyColumn]));
                }
                set {
                    this[this.tableIncident.AgencyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportNumber {
                get {
                    return ((string)(this[this.tableIncident.ReportNumberColumn]));
                }
                set {
                    this[this.tableIncident.ReportNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplementNumber {
                get {
                    return ((string)(this[this.tableIncident.SupplementNumberColumn]));
                }
                set {
                    this[this.tableIncident.SupplementNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportedDate {
                get {
                    return ((string)(this[this.tableIncident.ReportedDateColumn]));
                }
                set {
                    this[this.tableIncident.ReportedDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportedTime {
                get {
                    return ((string)(this[this.tableIncident.ReportedTimeColumn]));
                }
                set {
                    this[this.tableIncident.ReportedTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CADCallNumber {
                get {
                    return ((string)(this[this.tableIncident.CADCallNumberColumn]));
                }
                set {
                    this[this.tableIncident.CADCallNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    return ((string)(this[this.tableIncident.StatusColumn]));
                }
                set {
                    this[this.tableIncident.StatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NatureOfCall {
                get {
                    return ((string)(this[this.tableIncident.NatureOfCallColumn]));
                }
                set {
                    this[this.tableIncident.NatureOfCallColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PropertyId {
                get {
                    return ((string)(this[this.tableIncident.PropertyIdColumn]));
                }
                set {
                    this[this.tableIncident.PropertyIdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitNumber {
                get {
                    return ((string)(this[this.tableIncident.UnitNumberColumn]));
                }
                set {
                    this[this.tableIncident.UnitNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    return ((string)(this[this.tableIncident.CityColumn]));
                }
                set {
                    this[this.tableIncident.CityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZIPCode {
                get {
                    return ((string)(this[this.tableIncident.ZIPCodeColumn]));
                }
                set {
                    this[this.tableIncident.ZIPCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RepDist {
                get {
                    return ((string)(this[this.tableIncident.RepDistColumn]));
                }
                set {
                    this[this.tableIncident.RepDistColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Beat {
                get {
                    return ((string)(this[this.tableIncident.BeatColumn]));
                }
                set {
                    this[this.tableIncident.BeatColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Area {
                get {
                    return ((string)(this[this.tableIncident.AreaColumn]));
                }
                set {
                    this[this.tableIncident.AreaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromDate {
                get {
                    return ((string)(this[this.tableIncident.FromDateColumn]));
                }
                set {
                    this[this.tableIncident.FromDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromTime {
                get {
                    return ((string)(this[this.tableIncident.FromTimeColumn]));
                }
                set {
                    this[this.tableIncident.FromTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToDate {
                get {
                    return ((string)(this[this.tableIncident.ToDateColumn]));
                }
                set {
                    this[this.tableIncident.ToDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Officer {
                get {
                    return ((string)(this[this.tableIncident.OfficerColumn]));
                }
                set {
                    this[this.tableIncident.OfficerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Assignment {
                get {
                    return ((string)(this[this.tableIncident.AssignmentColumn]));
                }
                set {
                    this[this.tableIncident.AssignmentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Confidential {
                get {
                    return ((string)(this[this.tableIncident.ConfidentialColumn]));
                }
                set {
                    this[this.tableIncident.ConfidentialColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CmdrRpt {
                get {
                    return ((string)(this[this.tableIncident.CmdrRptColumn]));
                }
                set {
                    this[this.tableIncident.CmdrRptColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnteredBy {
                get {
                    return ((string)(this[this.tableIncident.EnteredByColumn]));
                }
                set {
                    this[this.tableIncident.EnteredByColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnteredBy2 {
                get {
                    return ((string)(this[this.tableIncident.EnteredBy2Column]));
                }
                set {
                    this[this.tableIncident.EnteredBy2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfficer {
                get {
                    return ((string)(this[this.tableIncident.ReviewOfficerColumn]));
                }
                set {
                    this[this.tableIncident.ReviewOfficerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RCStatus {
                get {
                    return ((string)(this[this.tableIncident.RCStatusColumn]));
                }
                set {
                    this[this.tableIncident.RCStatusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RCStatusDate {
                get {
                    return ((string)(this[this.tableIncident.RCStatusDateColumn]));
                }
                set {
                    this[this.tableIncident.RCStatusDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RCStatusTime {
                get {
                    return ((string)(this[this.tableIncident.RCStatusTimeColumn]));
                }
                set {
                    this[this.tableIncident.RCStatusTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExtraToReport {
                get {
                    return ((string)(this[this.tableIncident.ExtraToReportColumn]));
                }
                set {
                    this[this.tableIncident.ExtraToReportColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PInvolvementNumber {
                get {
                    return ((string)(this[this.tableIncident.PInvolvementNumberColumn]));
                }
                set {
                    this[this.tableIncident.PInvolvementNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NNarative {
                get {
                    return ((string)(this[this.tableIncident.NNarativeColumn]));
                }
                set {
                    this[this.tableIncident.NNarativeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PPlaceOfBirth {
                get {
                    return ((string)(this[this.tableIncident.PPlaceOfBirthColumn]));
                }
                set {
                    this[this.tableIncident.PPlaceOfBirthColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRelationToOffender {
                get {
                    return ((string)(this[this.tableIncident.PRelationToOffenderColumn]));
                }
                set {
                    this[this.tableIncident.PRelationToOffenderColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PDomViolence {
                get {
                    return ((string)(this[this.tableIncident.PDomViolenceColumn]));
                }
                set {
                    this[this.tableIncident.PDomViolenceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PExtentOfInjury {
                get {
                    return ((string)(this[this.tableIncident.PExtentOfInjuryColumn]));
                }
                set {
                    this[this.tableIncident.PExtentOfInjuryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PMeansOfAttack {
                get {
                    return ((string)(this[this.tableIncident.PMeansOfAttackColumn]));
                }
                set {
                    this[this.tableIncident.PMeansOfAttackColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PConfidential {
                get {
                    return ((string)(this[this.tableIncident.PConfidentialColumn]));
                }
                set {
                    this[this.tableIncident.PConfidentialColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PEthnicity {
                get {
                    return ((string)(this[this.tableIncident.PEthnicityColumn]));
                }
                set {
                    this[this.tableIncident.PEthnicityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PSkin {
                get {
                    return ((string)(this[this.tableIncident.PSkinColumn]));
                }
                set {
                    this[this.tableIncident.PSkinColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PEyeColor {
                get {
                    return ((string)(this[this.tableIncident.PEyeColorColumn]));
                }
                set {
                    this[this.tableIncident.PEyeColorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHairColor {
                get {
                    return ((string)(this[this.tableIncident.PHairColorColumn]));
                }
                set {
                    this[this.tableIncident.PHairColorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PToWeight {
                get {
                    return ((string)(this[this.tableIncident.PToWeightColumn]));
                }
                set {
                    this[this.tableIncident.PToWeightColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PWeight {
                get {
                    return ((string)(this[this.tableIncident.PWeightColumn]));
                }
                set {
                    this[this.tableIncident.PWeightColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PToHeight {
                get {
                    return ((string)(this[this.tableIncident.PToHeightColumn]));
                }
                set {
                    this[this.tableIncident.PToHeightColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHeight {
                get {
                    return ((string)(this[this.tableIncident.PHeightColumn]));
                }
                set {
                    this[this.tableIncident.PHeightColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PJuvenile {
                get {
                    return ((string)(this[this.tableIncident.PJuvenileColumn]));
                }
                set {
                    this[this.tableIncident.PJuvenileColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PToAge {
                get {
                    return ((string)(this[this.tableIncident.PToAgeColumn]));
                }
                set {
                    this[this.tableIncident.PToAgeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAge {
                get {
                    return ((string)(this[this.tableIncident.PAgeColumn]));
                }
                set {
                    this[this.tableIncident.PAgeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PDOB {
                get {
                    return ((string)(this[this.tableIncident.PDOBColumn]));
                }
                set {
                    this[this.tableIncident.PDOBColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PSex {
                get {
                    return ((string)(this[this.tableIncident.PSexColumn]));
                }
                set {
                    this[this.tableIncident.PSexColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRace {
                get {
                    return ((string)(this[this.tableIncident.PRaceColumn]));
                }
                set {
                    this[this.tableIncident.PRaceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PMini {
                get {
                    return ((string)(this[this.tableIncident.PMiniColumn]));
                }
                set {
                    this[this.tableIncident.PMiniColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PName {
                get {
                    return ((string)(this[this.tableIncident.PNameColumn]));
                }
                set {
                    this[this.tableIncident.PNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PType {
                get {
                    return ((string)(this[this.tableIncident.PTypeColumn]));
                }
                set {
                    this[this.tableIncident.PTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PInvolvement {
                get {
                    return ((string)(this[this.tableIncident.PInvolvementColumn]));
                }
                set {
                    this[this.tableIncident.PInvolvementColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientEID {
                get {
                    return ((string)(this[this.tableIncident.ClientEIDColumn]));
                }
                set {
                    this[this.tableIncident.ClientEIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SecondOfficer {
                get {
                    return ((string)(this[this.tableIncident.SecondOfficerColumn]));
                }
                set {
                    this[this.tableIncident.SecondOfficerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SecondAssignment {
                get {
                    return ((string)(this[this.tableIncident.SecondAssignmentColumn]));
                }
                set {
                    this[this.tableIncident.SecondAssignmentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FinalReportVersion {
                get {
                    return ((string)(this[this.tableIncident.FinalReportVersionColumn]));
                }
                set {
                    this[this.tableIncident.FinalReportVersionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToTime {
                get {
                    return ((string)(this[this.tableIncident.ToTimeColumn]));
                }
                set {
                    this[this.tableIncident.ToTimeColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.847.0")]
        public class IncidentRowChangeEvent : System.EventArgs {
            
            private IncidentRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncidentRowChangeEvent(IncidentRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IncidentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
